

import {useState, useEffect} from 'react'
import Axios from 'axios'


import PlayerCard from "../components/PlayerCard";
//import * as CatData from "./data";
//import * as utils from "./helpers.js";
import { v4 as uuidv4 } from "uuid";

//import Navbar from './components/Navbar' //take away {} when it is default export
import React from 'react'
import { PieChart,
  Pie,
  Tooltip,
  BarChart,
  XAxis,
  YAxis,
  Legend,
  CartesianGrid,
  Bar,
  ResponsiveContainer} from 'recharts'

import {Route,Routes} from 'react-router-dom'
//import Home from './pages/Home'
//import About from './pages/About'

//import 'bootstrap/dist/css/bootstrap.min.css'
import InputGroup from 'react-bootstrap/InputGroup'
import Form from 'react-bootstrap/Form'


//import '../general-styles.css'
import '../table-chart.css'
import '../stat-styles.css'

import $ from 'jquery';
import ReactCardFlip from 'react-card-flip'










export default function NBA(){
	//<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
	const [listOfUsers, setListOfUsers] = useState([ ]) /*players in the league*/
	
	const [listOfLeaguePlayers, setListOfLeaguePlayers] = useState([ ]) /*players in league, list is cross searched by player name, for player bio, season data, and others*/
	
	const [search, setSearch] = useState('')
	//console.log(search)
	
	//var category = ''
	const [category,setCategory] = useState('hits')/*default category(ie. what shows up first on page)*/
	const [usersByCategory, setUsersByCategory] = useState([])
	
	
	
	
	const [isFlipped, setIsFlipped] = useState(false);
	
	function flipCard(){
		setIsFlipped(!isFlipped);
	}
	
	useEffect(()=>{
		Axios.get("http://localhost:3001/api/stats/mlb").then((response) => {
			setListOfUsers(response.data)
		})//api endpoint rmemeebrr
	}, [])
	
	/*setUsersByCategory(e.target.name)*/
	
	useEffect(()=>{
		Axios.get("http://localhost:3001/api/players/mlb").then((response) => {
			setListOfLeaguePlayers(response.data)
		})//api endpoint rmemeebrr
	}, [])
	
	
					
	return(<div>
		
		<div class="stat-search-n-nav">
			<div name = 'stat-gallery' class = 'stat-nav'>
			<button name = 'hits' class = "stat-button" onClick={(e)=> setCategory(e.target.name)}> HITS </button>
			<button name = 'Ks' class = "stat-button" onClick={(e)=> setCategory(e.target.name)}> STRIKEOUTS(K) </button>
			<button name = 'N/A' class = "stat-button" onClick={(e)=> setCategory(e.target.name)}> TBD </button>
			<button name = 'N?A' class = "stat-button" onClick={(e)=> setCategory(e.target.name)}> TBD </button>
			</div>
			
			<div class="search-container">
			
			<form>
			
					<div class = "search">
						<span class="search-icon material-symbols-outlined"></span>
						<input class="search-input" type="search" placeholder="Search for player" onChange={(e)=> setSearch(e.target.value)}/>
					</div>
			
			
			</form>
			
			</div>
				
		</div>	
			
		
		<hr/>
		
		
		<div class = "flip-card-container">
		{listOfUsers.filter((user)=> {
			if(search != ''){
				return search.toLowerCase() === '' ? user : user.name.toLowerCase().includes(search.toLowerCase())
			}else{
				return category.toLowerCase() === '' ? user : user.prop_title.toLowerCase() == category
			}
		}).map((user) => {
				
				//keep as listOfusrr
			  
			  return (<div>
			  <PlayerCard
					
					userData={user}
					crossUserData = {listOfLeaguePlayers.find(({ name }) => name === user.name) === undefined? listOfLeaguePlayers.at(0): listOfLeaguePlayers.find(({ name }) => name === user.name) }
						
				  /></div>)
			  
			  
			})
		}
		</div>
		
		
			
		
		
		
	</div>)

	//return <h1> NBA </h1>
}

//sample_flippers 

//< ReactCardFlip width = "400px" flipDirection='horizontal'>{tableJSON(user)}{graphJSON(user)}</ReactCardFlip>

//keep the tag brackets touching to prevent the reactcardlip 2 child error

//<div> dadsd sd s </div><div> sds sd s</div> 

/*{
			search.toLowerCase() == '' &&
			<div name = 'stat-container'>
				EMPTY SEARCH BAR
				{setListOfUsers(usersByCategory)}
			</div>
		}
		
		*/
		
		